/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */
boolean stop;
synchronized public void win_draw1(GWinApplet appc, GWinData data) { //_CODE_:window1:893113:
  appc.background(230);

} //_CODE_:window1:893113:

public void slider2_change1(GSlider source, GEvent event) { //_CODE_:size_control:980503:
  //println(slider2.getValueI());
} //_CODE_:size_control:980503:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:stroke_control:464224:
  //println("slider1 - GSlider event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:stroke_control:464224:

public void slider3_change1(GSlider source, GEvent event) { //_CODE_:color_g:433332:
  //println("slider3 - GSlider event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:color_g:433332:

public void checkbox1_clicked1(GCheckbox source, GEvent event) { //_CODE_:checkbox1:454399:
  //println("checkbox1 - GCheckbox event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:checkbox1:454399:

public void slider5_change1(GSlider source, GEvent event) { //_CODE_:opacity_control:926856:
  //println("opacity_control - GSlider event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:opacity_control:926856:

public void slider4_change1(GSlider source, GEvent event) { //_CODE_:color_r:261899:
  //println("color_r - GSlider event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:color_r:261899:

public void slider6_change1(GSlider source, GEvent event) { //_CODE_:color_b:743275:
  //println("color_b - GSlider event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:color_b:743275:

public void checkbox1_clicked2(GCheckbox source, GEvent event) { //_CODE_:draw_circle:558751:
  println("draw_circle - GCheckbox event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:draw_circle:558751:

public void checkbox2_clicked1(GCheckbox source, GEvent event) { //_CODE_:draw_arcs:637492:
  println("draw_arcs - GCheckbox event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:draw_arcs:637492:

public void button1_click1(GButton source, GEvent event) { //_CODE_:stopbutton:721318:
  if(stop){
    loop();
    stop = false;
    stopbutton.setText("Stop");
  }
  else {
    noLoop();
    stop = true;
    stopbutton.setText("Start");
  }
} //_CODE_:stopbutton:721318:

public void button1_click2(GButton source, GEvent event) { //_CODE_:screenbutton:821178:
  save("swag.png");
} //_CODE_:screenbutton:821178:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if(frame != null)
    frame.setTitle("Sketch Window");
  window1 = new GWindow(this, "Controls", 0, 0, 240, 173, false, JAVA2D);
  window1.addDrawHandler(this, "win_draw1");
  size_control = new GSlider(window1.papplet, 80, 50, 80, 20, 10.0);
  size_control.setLimits(650.0, 0.0, 1000.0);
  size_control.setNumberFormat(G4P.DECIMAL, 2);
  size_control.setOpaque(false);
  size_control.addEventHandler(this, "slider2_change1");
  label1 = new GLabel(window1.papplet, 80, 30, 80, 19);
  label1.setText("Size");
  label1.setOpaque(false);
  stroke_control = new GSlider(window1.papplet, 0, 50, 70, 20, 10.0);
  stroke_control.setLimits(255.0, 0.0, 255.0);
  stroke_control.setEasing(3.0);
  stroke_control.setNumberFormat(G4P.DECIMAL, 2);
  stroke_control.setOpaque(false);
  stroke_control.addEventHandler(this, "slider1_change1");
  label2 = new GLabel(window1.papplet, 0, 30, 70, 20);
  label2.setText("Stroke");
  label2.setOpaque(false);
  label3 = new GLabel(window1.papplet, 80, 70, 80, 20);
  label3.setText("Opacity");
  label3.setOpaque(false);
  color_g = new GSlider(window1.papplet, 210, 70, 70, 20, 10.0);
  color_g.setRotation(PI/2, GControlMode.CORNER);
  color_g.setLimits(255.0, 0.0, 255.0);
  color_g.setNumberFormat(G4P.DECIMAL, 2);
  color_g.setOpaque(false);
  color_g.addEventHandler(this, "slider3_change1");
  checkbox1 = new GCheckbox(window1.papplet, 5, 120, 120, 20);
  checkbox1.setText("random colors");
  checkbox1.setTextItalic();
  checkbox1.setOpaque(false);
  checkbox1.addEventHandler(this, "checkbox1_clicked1");
  opacity_control = new GSlider(window1.papplet, 80, 90, 80, 20, 10.0);
  opacity_control.setLimits(0.0, 0.0, 255.0);
  opacity_control.setNumberFormat(G4P.DECIMAL, 2);
  opacity_control.setOpaque(false);
  opacity_control.addEventHandler(this, "slider5_change1");
  color_r = new GSlider(window1.papplet, 190, 70, 70, 20, 10.0);
  color_r.setRotation(PI/2, GControlMode.CORNER);
  color_r.setLimits(0.5, 0.0, 255.0);
  color_r.setNumberFormat(G4P.DECIMAL, 2);
  color_r.setOpaque(false);
  color_r.addEventHandler(this, "slider4_change1");
  color_b = new GSlider(window1.papplet, 230, 70, 70, 20, 10.0);
  color_b.setRotation(PI/2, GControlMode.CORNER);
  color_b.setLimits(255.0, 0.0, 255.0);
  color_b.setNumberFormat(G4P.DECIMAL, 2);
  color_b.setOpaque(false);
  color_b.addEventHandler(this, "slider6_change1");
  label4 = new GLabel(window1.papplet, 170, 40, 20, 20);
  label4.setText("C");
  label4.setTextBold();
  label4.setOpaque(false);
  label5 = new GLabel(window1.papplet, 190, 40, 20, 20);
  label5.setText("M");
  label5.setTextBold();
  label5.setOpaque(false);
  label6 = new GLabel(window1.papplet, 210, 40, 20, 20);
  label6.setText("Y");
  label6.setTextBold();
  label6.setOpaque(false);
  draw_circle = new GCheckbox(window1.papplet, 5, 80, 60, 20);
  draw_circle.setText("circle");
  draw_circle.setOpaque(false);
  draw_circle.addEventHandler(this, "checkbox1_clicked2");
  draw_arcs = new GCheckbox(window1.papplet, 5, 100, 60, 20);
  draw_arcs.setText("arcs");
  draw_arcs.setOpaque(false);
  draw_arcs.addEventHandler(this, "checkbox2_clicked1");
  draw_arcs.setSelected(true);
  label7 = new GLabel(window1.papplet, 0, 10, 240, 20);
  label7.setText("CONTROL");
  label7.setTextBold();
  label7.setTextItalic();
  label7.setOpaque(false);
  stopbutton = new GButton(window1.papplet, 120, 150, 80, 20);
  stopbutton.setText("Stop");
  stopbutton.addEventHandler(this, "button1_click1");
  screenbutton = new GButton(window1.papplet, 40, 150, 80, 20);
  screenbutton.setText("Screenshot");
  screenbutton.addEventHandler(this, "button1_click2");
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GSlider size_control; 
GLabel label1; 
GSlider stroke_control; 
GLabel label2; 
GLabel label3; 
GSlider color_g; 
GCheckbox checkbox1; 
GSlider opacity_control; 
GSlider color_r; 
GSlider color_b; 
GLabel label4; 
GLabel label5; 
GLabel label6; 
GCheckbox draw_circle; 
GCheckbox draw_arcs; 
GLabel label7; 
GButton stopbutton; 
GButton screenbutton; 

